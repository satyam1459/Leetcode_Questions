class Solution {
    public String minWindow(String s, String t) {
       String ans = "";

       HashMap<Character,Integer> hmt = new HashMap<>();
       //store frequency of char of target string
       for(int i = 0 ;i < t.length(); i++){
           char ch = t.charAt(i);
            hmt.put(ch,hmt.getOrDefault(ch,0)+1);
       } 

        HashMap<Character,Integer> hms = new HashMap<>();

        int i = -1;
        int j = -1;

        int mct = 0;                    //match count for check
        int dmct = t.length();          // here desired match count

        while(true){
            boolean f1 = false;
            boolean f2 = false;

            while( i < s.length()-1 &&  mct < dmct){
               i++;
               char ch = s.charAt(i);
               hms.put(ch,hms.getOrDefault(ch,0)+1);

        //IF FREQ OF CHAR IN TARGET STRING BECOMES EQUAL TO STRING , THEN MATCH COUNT INCREASE
               if(hmt.getOrDefault(ch,0) >= hms.getOrDefault(ch,0))   mct++;
               f1= true;
            }

        //collect answer and try to reduce ans
            while( j < i && mct == dmct){
                String currAns = s.substring(j+1,i+1);
                if(ans.length() == 0 || currAns.length() < ans.length() )  ans = currAns;
                j++;
                char ch = s.charAt(j);
                if(hms.get(ch) == 1)     hms.remove(ch);
                else    hms.put(ch,hms.get(ch)-1);

                if(hms.getOrDefault(ch,0) < hmt.getOrDefault(ch,0))   mct--;
                f2 = true;
            }

            if(f1 == false && f2 == false)  break;
        }
        return ans;
    }
}
